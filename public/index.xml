<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dangling Pointers</title>
    <link>http://danglingpointers.com/</link>
    <description>Recent content on Dangling Pointers</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 06 May 2017 12:03:27 +0200</lastBuildDate>
    
	<atom:link href="http://danglingpointers.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>String Hashes</title>
      <link>http://danglingpointers.com/post/string-hashes/</link>
      <pubDate>Sat, 06 May 2017 12:03:27 +0200</pubDate>
      
      <guid>http://danglingpointers.com/post/string-hashes/</guid>
      <description>&lt;p&gt;Strings are often used as &lt;strong&gt;identifiers&lt;/strong&gt; in games: object names, sound effect names, particle type names, etc. They&amp;rsquo;re a bit like enums with the advantage of allowing your game to be data-driven: you don&amp;rsquo;t necessarily need to recompile your program to accept new values.&lt;/p&gt;

&lt;p&gt;But strings are no fun: storing them efficiently is a headache, they&amp;rsquo;re bigger and they&amp;rsquo;re slower than enums.&lt;/p&gt;

&lt;p&gt;Fortunately there&amp;rsquo;s an alternative: &lt;strong&gt;string hashes&lt;/strong&gt;. We like them a lot at &lt;a href=&#34;http://www.pastagames.com/&#34;&gt;Pastagames&lt;/a&gt;, and here are our humble solutions to the practical problems that come with them.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Mike Acton&#39;s Data-Oriented Design Workshop (2015)</title>
      <link>http://danglingpointers.com/post/mike-actons-dod-workshop-2015/</link>
      <pubDate>Sat, 19 Mar 2016 12:04:48 +0100</pubDate>
      
      <guid>http://danglingpointers.com/post/mike-actons-dod-workshop-2015/</guid>
      <description>&lt;p&gt;I attended Mike Acton&amp;rsquo;s master class during last year&amp;rsquo;s &lt;a href=&#34;http://www.game-connection.com/master-classes-0&#34;&gt;Game Connection&lt;/a&gt; in Paris.
Unsurprisingly it was about data-oriented design, but it was a workshop, a practical exercise, and it showed us (or at least me)
a new facet of the concept, as well as a few interesting techniques.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Other blogs and links</title>
      <link>http://danglingpointers.com/post/links/</link>
      <pubDate>Thu, 24 Dec 2015 18:00:19 +0200</pubDate>
      
      <guid>http://danglingpointers.com/post/links/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;images/would-you-like-to-knwo-more.jpg&#34; alt=&#34;Would you like to know more?&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Don’t use std::list</title>
      <link>http://danglingpointers.com/post/dont-use-std-list/</link>
      <pubDate>Thu, 24 Dec 2015 17:00:19 +0200</pubDate>
      
      <guid>http://danglingpointers.com/post/dont-use-std-list/</guid>
      <description>&lt;p&gt;I feel like I’ve been saying this a lot lately ‒ at least once per intern we take at Pastagames ‒ so I guess it&amp;rsquo;s time I write it down.
There&amp;rsquo;s nothing new here, this has been said a hundred times over on the Internet,
but since a lot of people are still not aware of it, here is my contribution.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>About</title>
      <link>http://danglingpointers.com/about/</link>
      <pubDate>Thu, 24 Dec 2015 15:18:05 +0200</pubDate>
      
      <guid>http://danglingpointers.com/about/</guid>
      <description>&lt;p&gt;Hello and welcome!&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>GPU on Dangling Pointers</title>
    <link>https://danglingpointers.com/tags/gpu/</link>
    <description>Recent content in GPU on Dangling Pointers</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 21 Apr 2025 17:14:00 +0200</lastBuildDate>
    
	<atom:link href="https://danglingpointers.com/tags/gpu/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>D3D12 Resource States Cheat Sheet</title>
      <link>https://danglingpointers.com/post/d3d12-resource-states/</link>
      <pubDate>Mon, 21 Apr 2025 17:14:00 +0200</pubDate>
      
      <guid>https://danglingpointers.com/post/d3d12-resource-states/</guid>
      <description>&lt;p&gt;The D3D12 Transition barriers may look simple at first glance, but once you consider &lt;strong&gt;state promotion&lt;/strong&gt; and interactions with &lt;strong&gt;copy queues&lt;/strong&gt;, there are quite a lot of subtle rules.&lt;/p&gt;

&lt;p&gt;The documentation is pretty complete, but also a bit scattered and confusing.&lt;/p&gt;

&lt;p&gt;I wished several times I had a &lt;strong&gt;cheat sheet&lt;/strong&gt;, and had instead to rely on my &lt;strong&gt;old comments&lt;/strong&gt; and testing things with the &lt;strong&gt;debug layer&lt;/strong&gt; enabled. This article is an attempt at helping future me :)&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;images/DirectX_12_Ultimate.png&#34; alt=&#34;DirectX 12 logo&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Copy Queue woes.</title>
      <link>https://danglingpointers.com/post/copy-queues/</link>
      <pubDate>Mon, 01 Apr 2024 17:02:00 +0200</pubDate>
      
      <guid>https://danglingpointers.com/post/copy-queues/</guid>
      <description>&lt;p&gt;Consider this case: you&amp;rsquo;re launching several &lt;strong&gt;Async Compute&lt;/strong&gt; jobs. They need some input buffers to be uploaded, and some output buffers to be read back.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;images/CopyQueues_base.svg&#34; alt=&#34;Base scenario&#34; /&gt;&lt;/p&gt;

&lt;p&gt;How do you minimize the time it takes to get all the outputs back to the CPU? I&amp;rsquo;m focusing on D3D12 and Windows for this article.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>